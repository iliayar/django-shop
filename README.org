* Shop
Test shop application in django \\
Used in another project
** Production Setup
1. create /.env.prod/
   Exmaple content
   #+begin_src env
   DEBUG=0
   SECRET_KEY=change_me
   DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
   SQL_ENGINE=django.db.backends.postgresql
   SQL_DATABASE=hello_django_prod
   SQL_USER=hello_django
   SQL_PASSWORD=hello_django
   SQL_HOST=db
   SQL_PORT=5432
   DATABASE=postgres
  #+end_src
2. create /.env.prod.db/
   Exmaple content
   #+begin_src env
   POSTGRES_USER=hello_django
   POSTGRES_PASSWORD=hello_django
   POSTGRES_DB=hello_django_prod
   #+end_src
3. ~docker-compose -f docker-compose.prod.yml build~
4. ~docker-compose -f docker-compose.prod.yml up -d~
5. ~docker-compose -f docker-compose.prod.yml exec web python manage.py migrate~
6. ~docker-compose -f docker-compose.prod.yml exec web python manage.py collectstatic --clear~
*** Other
- Restart after changes: ~docker-compose -f docker-compose.prod.yml up -d --build~
- Stop: ~docker-compose -f docker-compose.prod.yml down -v~
- Nginx exmaple configuration
#+begin_src nginx
server {
    listen 443 ssl;

    server_name example.com;

    location / {
        proxy_pass http://127.0.0.1:8080/;
    }
}

server {
    listen 80;

    server_name example.com;

    location / {
        proxy_pass http://127.0.0.1:8080/;
    }
}
#+end_src
** TODO Development Setup 
1. create /.env.dev/
Example content
#+begin_src env
DEBUG=1
SECRET_KEY=foo
DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
SQL_ENGINE=django.db.backends.postgresql
SQL_DATABASE=hello_django_dev
SQL_USER=hello_django
SQL_PASSWORD=hello_django
SQL_HOST=db
SQL_PORT=5432
DATABASE=postgres
#+end_src
Env for db is set in /docker-compose.yml/
2. ~docker-compose build~
3. ~docker-compose up -d~
5. ~docker-compose exec web python manage.py migrate~
6. ~docker-compose exec web python manage.py collectstatic --clear~
*** Other
- Restart after changes with ~docker-compose up -d --build~
